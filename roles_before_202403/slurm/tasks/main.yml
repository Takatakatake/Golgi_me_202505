- name: install build-essential
  apt:
    name: build-essential
    state: present

- name: make a source directory
  file:
    path: "{{ source_directory }}"
    state: directory

- name: unarchive source files
  unarchive:
    src: "slurm-{{ slurm_version }}.tar.bz2"
    dest: "{{ source_directory }}"

- stat: path="{{ install_prefix }}/sbin/slurmctld"
  register: slurmctld

- name: configure SLURM
  command: "./configure --prefix={{ install_prefix }}"
  args:
    chdir: "{{ source_directory }}/slurm-{{ slurm_version }}"
  register: configured
  when: slurmctld.stat.executable is not defined

- name: "make {{ install_prefix }}/etc"
  file:
    path: "{{ install_prefix }}/etc"
    state: directory

- name: create slurm.conf
  template:
    src: slurm2.conf.j2
    dest: "{{ install_prefix }}/etc/slurm.conf"
  register: slurm_conf
  notify: restart services

- name: compile and install SLURM
  make:
    target: "{{ item }}"
    chdir: "{{ source_directory }}/slurm-{{ slurm_version }}"
  with_items:
    - all
    - install
  when: ((slurmctld.stat.executable is not defined) and (configured is success)) or
        slurm_conf.changed

- name: add a ldconf file for SLURM
  copy:
    dest: /etc/ld.so.conf.d/slurm.conf
    content: "{{ install_prefix }}/lib"
  notify: update ldconfig

- name: make directories for SLURM
  file:
    path: "{{ item }}"
    state: directory
    recurse: yes
    owner: "{{ user }}"
  with_items:
    - "{{ state_dir }}"
    - "{{ spool_dir }}"
    - "{{ slurm_logdir }}"

- stat:
    path: "{{ accounting_file }}"
  register: acct_result

- name: touch a file for accouting
  file:
    path: "{{ accounting_file }}"
    owner: "{{ user }}"
    state: touch
  when: not acct_result.stat.exists

- name: copy gres.conf
  copy:
    src: gres.conf
    dest: "{{ install_prefix }}/etc"

- name: copy service files for SLURM
  copy:
    src: "{{ source_directory }}/slurm-{{ slurm_version }}/etc/{{ item }}"
    dest: "/lib/systemd/system/{{ item }}"
    remote_src: yes
  with_items: "{{ services }}"
  notify: restart services

- name: enable services
  systemd:
    name: "{{ item }}"
    enabled: yes
    daemon_reload: yes
  loop: "{{ services }}"

- name: set path setting script for slurm in admin
  copy:
    src: slurm-bin-path.sh
    dest: "/etc/profile.d/slurm-bin-path.sh"
